
buttonname.add    = \u0414\u043E\u0434\u0430\u0442\u0438
buttonname.cancel = \u0421\u043A\u0430\u0441\u0443\u0432\u0430\u0442\u0438
buttonname.delete = \u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438
buttonname.edit   = \u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438
buttonname.login  = \u0423\u0432\u0456\u0439\u0442\u0438
buttonname.logoff = \u0412\u0438\u0439\u0442\u0438
buttonname.submit = \u0412\u0438\u043A\u043E\u043D\u0430\u0442\u0438

error.fieldMatch     = \u043F\u043E\u043B\u044F \u043F\u0430\u0440\u043E\u043B\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0441\u043F\u0456\u0432\u043F\u0430\u0434\u0430\u0442\u0438
error.uniqueUsername = \u0442\u0430\u043A\u0435 \u0456\u043C'\u044F \u043A\u043E\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0432\u0436\u0435 \u0456\u0441\u043D\u0443\u0454

inputlabel.atsGroup = \u0413\u0440\u0443\u043F\u0430 \u0410\u0422\u0421

javax.validation.constraints.AssertFalse.message     = must be false
javax.validation.constraints.AssertTrue.message      = must be true
javax.validation.constraints.DecimalMax.message      = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message          = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Email.message           = must be a well-formed email address
javax.validation.constraints.Future.message          = must be a future date
javax.validation.constraints.FutureOrPresent.message = must be a date in the present or in the future
javax.validation.constraints.Max.message             = must be less than or 123 equal to {value}
javax.validation.constraints.Min.message             = must be greater than or equal to {value}
javax.validation.constraints.Negative.message        = must be less than 0
javax.validation.constraints.NegativeOrZero.message  = must be less than or equal to 0
javax.validation.constraints.NotBlank.message        = \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043F\u043E\u0440\u043E\u0436\u043D\u0456\u043C
javax.validation.constraints.NotEmpty.message        = must not be empty
javax.validation.constraints.NotNull.message         = must not be null
javax.validation.constraints.Null.message            = must be null
javax.validation.constraints.Past.message            = must be a past date
javax.validation.constraints.PastOrPresent.message   = must be a date in the past or in the present
javax.validation.constraints.Pattern.message         = \u041D\u0415 \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u0448\u0430\u0431\u043B\u043E\u043D\u0443 "{regexp}"
javax.validation.constraints.Positive.message        = must be greater than 0
javax.validation.constraints.PositiveOrZero.message  = must be greater than or equal to 0
javax.validation.constraints.Size.message            = \u0440\u043E\u0437\u043C\u0456\u0440 \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0431\u0443\u0442\u0438 \u0432\u0456\u0434 {min} \u0434\u043E {max}

language = uk

org.hibernate.validator.constraints.CodePointLength.message        = length must be between {min} and {max}
org.hibernate.validator.constraints.CreditCardNumber.message       = invalid credit card number
org.hibernate.validator.constraints.Currency.message               = invalid currency (must be one of {value})
org.hibernate.validator.constraints.EAN.message                    = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                  = not a well-formed email address
org.hibernate.validator.constraints.ISBN.message                   = invalid ISBN
org.hibernate.validator.constraints.Length.message                 = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message              = the check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message             = the check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message             = the check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message               = the check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotEmpty.message               = \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043F\u043E\u0440\u043E\u0436\u043D\u0456\u043C
org.hibernate.validator.constraints.ParametersScriptAssert.message = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                  = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message               = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message           = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message                    = must be a valid URL
org.hibernate.validator.constraints.UniqueElements.message         = must only contain unique elements
org.hibernate.validator.constraints.br.CNPJ.message                = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                 = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message     = invalid Brazilian Voter ID card number
org.hibernate.validator.constraints.pl.NIP.message                 = invalid VAT Identification Number (NIP)
org.hibernate.validator.constraints.pl.PESEL.message               = invalid Polish National Identification Number (PESEL)
org.hibernate.validator.constraints.pl.REGON.message               = invalid Polish Taxpayer Identification Number (REGON)
org.hibernate.validator.constraints.time.DurationMax.message       = must be shorter than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
org.hibernate.validator.constraints.time.DurationMin.message       = must be longer than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}

placeholder.atsGroup = 000

titleform.deleteCompany = \u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u043F\u0456\u0434\u043F\u0440\u0438\u0454\u043C\u0441\u0442\u0432\u043E 
titleform.department    = \u0412\u0442\u0434\u0456\u043B
titleform.departments   = \u0412\u0456\u0434\u0434\u0456\u043B\u0438

unique.value.violation = \u00D0\u00A2\u00D0\u00B0\u00D0\u00BA\u00D0\u00B8\u00D0\u00B9 \u00D0\u00B7\u00D0\u00B0\u00D0\u00BF\u00D0\u00B8\u00D1\u0081 \u00D0\u00B2\u00D0\u00B6\u00D0\u00B5 \u00D1\u0096\u00D1\u0081\u00D0\u00BD\u00D1\u0083\u00D1\u0094!
